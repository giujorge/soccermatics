soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
yBins <- bins
if(missing(yBins)) yBins <- bins
return(yBins)
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE, yBins = 10)
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE, yBins = 8)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
yBins <- bins
if(is.null(yBins)) yBins <- bins
return(yBins)
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE, yBins = 8)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
return(yBins)
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE, yBins = 8)
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
return(yBins)
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE, yBins = 10)
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE, yBins = 9)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, direction) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(direction),
n = n()) %>%
ungroup()
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE, yBins = 9)
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, direction) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(direction),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean, radius = widthPitch / (yBins+2)), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean, radius = widthPitch / (yBins+2)), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, direction) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(direction),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean, radius = widthPitch / (yBins+2)), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, direction) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(direction),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean, radius = widthPitch / (bins+2)), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, direction) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(direction),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 10, grass = TRUE)
p <- soccerHeatmap(subset(tromso_extra, id == 8), bins = 5)
p
p + soccerFlow(plot = p, subset(tromso_extra, id == 8), bins = 5)
soccerFlow(subset(tromso_extra, id == 8), bins = 5, plot = p)
soccerFlow <- function(df, bins, angle_var = "direction", lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, angle_var) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(angle_var),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 5, plot = p)
warnings()
soccerFlow <- function(df, bins, angle_var = "direction", lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, angle_var) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(!!angle_var),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 5, plot = p)
soccerFlow <- function(df, bins, angle_var = "direction", lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, !!angle_var) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(!!angle_var),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 5, plot = p)
soccerFlow <- function(df, bins, angle_var = "direction", lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, !!angle_var) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean := mean(!!angle_var),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 5, plot = p)
soccerFlow <- function(df, bins, angle_var = "direction", lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, angle_var) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean := mean(!!angle_var),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 5, plot = p)
soccerFlow <- function(df, bins, lengthPitch = 105, widthPitch = 68, yBins = NULL, grass = FALSE, plot = NULL) {
# check value for vertical bins and match to horizontal bins if NULL
if(is.null(yBins)) yBins <- bins
# adjust range and n bins
x.range <- seq(0, lengthPitch, length.out = bins+1)
y.range <- seq(0, widthPitch, length.out = yBins+1)
# bin plot values
x.bin.coords <- data.frame(x.bin = 1:bins,
x.bin.coord = (x.range + (lengthPitch / (bins) / 2))[1:bins])
y.bin.coords <- data.frame(y.bin = 1:yBins,
y.bin.coord = (y.range + (widthPitch / (yBins) / 2))[1:yBins])
# bin data
df <- df %>%
rowwise() %>%
mutate(x.bin = max(which(x > x.range)),
y.bin = max(which(y > y.range)),
bin = paste(x.bin, y.bin, sep = "_")) %>%
ungroup()
# summarise values for each bin
df <- df %>%
group_by(bin) %>%
select(id, bin, x.bin, y.bin, id, x, y, direction) %>%
mutate(x.mean = mean(x),
y.mean = mean(y),
angle.mean = mean(direction),
n = n()) %>%
ungroup()
# add x,y-coords for bin centres
df <- left_join(df, x.bin.coords, by = "x.bin")
df <- left_join(df, y.bin.coords, by = "y.bin")
if(missing(plot)) {
soccerPitchBG(lengthPitch = lengthPitch, widthPitch = widthPitch, grass = grass) +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
} else {
plot +
geom_point(data = df, aes(x = x.bin.coord, y = y.bin.coord)) +
geom_spoke(data = df, aes(x = x.bin.coord, y = y.bin.coord, angle = angle.mean), radius = widthPitch / (yBins+2), arrow=arrow(length = unit(0.2,"cm"))) +
guides(fill=FALSE)
}
}
soccerFlow(subset(tromso_extra, id == 8), bins = 5, plot = p)
path <- find.package("soccermatics")
setwd("~/Dropbox/github/soccermatics/")
document()
library(roxygenise)
library(roxygen2)
document()
library(devtools)
document()
document()
path <- find.package("soccermatics")
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
document()
path <- find.package("soccermatics")
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
